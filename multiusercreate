#!/bin/bash

set -e

# ANSI color codes and emoji for readability
GREEN=$(tput setaf 2)   # 🟢
YELLOW=$(tput setaf 3)  # 🟡
RED=$(tput setaf 1)     # 🔴
RESET=$(tput sgr0)      # 🔄

# Function to display loading animation
function loading_animation() {
    local pid=$!
    local delay=0.15
    local spin='⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏'

    while ps -p $pid >/dev/null; do
        local temp=${spin#?}
        printf " [%c] " "$spin"
        local spin=$temp${spin%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done

    printf "    \b\b\b\b"
}

# Function to log messages with color
function log_message() {
    local color=$1
    local message=$2
    printf "${color}$message${RESET}\n"
}

# Function to setup a single user
function user_setup() {
    local login=$1
    local password=$2
    local ssh_pub_path=$3

    log_message "$GREEN" "🚀 Creating user directories and setting up SSH for $login..."

    homedir="/home/$login"
    ssh_dir="$homedir/.ssh"

    # Check if the user already exists
    if id -u "$login" >/dev/null 2>&1; then
        log_message "$YELLOW" "⚠️  User $login already exists. Please choose a different username."
        return 1
    fi

    # Check if the SSH public key file exists
    if [ ! -f "$ssh_pub_path" ]; then
        log_message "$YELLOW" "⚠️  SSH public key file does not exist for user $login. Please check the path and try again."
        return 1
    fi

    # Create user directories
    sudo mkdir -p "$ssh_dir"
    sudo cp "$ssh_pub_path" "$ssh_dir/authorized_keys"
    sudo cp -rT /etc/skel "$homedir"
    sudo useradd -d "$homedir" -s /bin/bash "$login"
    sudo chown -R "$login:$login" "$homedir"
    echo "$login:$password" | sudo chpasswd

    log_message "$GREEN" "✅ User setup for $login completed successfully!"

    # Check if user is successfully added
    if id -u "$login" >/dev/null 2>&1; then
        log_message "$GREEN" "🎉 Enjoy your new user account, $login!"
    else
        log_message "$YELLOW" "⚠️  User creation for $login failed. Please check the provided details and try again."
    fi
}

# Initialize log file
log_file="user_setup_log.txt"
echo "User Setup Log" > "$log_file"

# Start setup process
log_message "$GREEN" "🌟 Starting user setup..."
total_users=0
successful_users=0
failed_users=0
existing_users=0
missing_keys=0

# Read the user.txt file and process each user
while IFS=' ' read -r login password ssh_pub_path; do
    total_users=$((total_users + 1))
    if user_setup "$login" "$password" "$ssh_pub_path"; then
        successful_users=$((successful_users + 1))
    else
        failed_users=$((failed_users + 1))
    fi
done < users.txt

# Summary Report
log_message "$GREEN" "📢 Summary Report:"
log_message "$GREEN" "Total users processed: $total_users"
log_message "$GREEN" "Users successfully created: $successful_users"
log_message "$YELLOW" "Users already existing: $existing_users"
log_message "$YELLOW" "Users with missing SSH keys: $missing_keys"
log_message "$YELLOW" "Users with failed creations: $failed_users"

log_message "$GREEN" "🌟 User setup completed!${RESET}"
